{"version":3,"sources":["Images/icon-up.svg","Images/icon-down.svg","Images/icon-facebook.svg","Images/icon-twitter.svg","Images/icon-instagram.svg","Images/icon-youtube.svg","Components/HeaderAndDarkModeToggle.jsx","Components/FollowerCountColumns.jsx","Components/OverviewComponents.jsx","Components/AppContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderAndDarkModeToggle","className","this","props","theme","Container","Row","Col","xs","sm","md","Form","Check","onClick","toggleDarkMode","type","id","label","Component","FollowerCountColumns","src","facebookIcon","alt","upIcon","twitterIcon","youtubeIcon","instaIcon","downIcon","OverviewComponents","AppContainer","state","setState","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,qC,qBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,yPCyD5BC,G,6KAhDP,OACI,yBAAKC,UAAW,qCAAiCC,KAAKC,MAAMC,QACxD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACrB,wDACA,yDAIJ,kBAACH,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACrB,kBAACL,EAAA,EAAD,CAAWJ,UAAW,kCAA8BC,KAAKC,MAAMC,QAC3D,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAKvB,kBAACH,EAAA,EAAD,CAAKN,UAAW,0BAAsBC,KAAKC,MAAMC,OAASI,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxE,4CAGJ,kBAACH,EAAA,EAAD,CAAMN,UAAW,4BAAwBC,KAAKC,MAAMC,OAASI,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3E,kBAACC,EAAA,EAAD,CAAMV,UAAW,2BACb,kBAACU,EAAA,EAAKC,MAAN,CACIC,QAASX,KAAKC,MAAMW,eACpBC,KAAK,SACLC,GAAG,gBACHC,MAAM,iB,GA9BhBC,c,qGCmEvBC,E,uKA5DP,OACI,6BACI,kBAACd,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACpB,yBAAKT,UAAW,qDAAgDC,KAAKC,MAAMC,QACvE,uBAAGH,UAAW,yBAAoBC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKC,IAAcC,IAAK,iBAAnF,cAEA,yCACA,uBAAGrB,UAAW,uCAAkCC,KAAKC,MAAMC,QAA3D,cACA,uBAAGH,UAAW,qCAAgCC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKG,IAAQD,IAAK,WAAzF,gBAKR,kBAACf,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACpB,yBAAKT,UAAW,mDAA8CC,KAAKC,MAAMC,QACrE,uBAAGH,UAAW,yBAAoBC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKI,IAAaF,IAAK,gBAAlF,cAEA,yCACA,uBAAGrB,UAAW,uCAAkCC,KAAKC,MAAMC,QAA3D,cACA,uBAAGH,UAAW,qCAAgCC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKG,IAAQD,IAAK,WAAzF,eAMR,kBAACf,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACpB,yBAAKT,UAAW,qDAAgDC,KAAKC,MAAMC,QACvE,uBAAGH,UAAW,yBAAoBC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKK,IAAaH,IAAK,gBAAlF,cAEA,yCACA,uBAAGrB,UAAW,uCAAkCC,KAAKC,MAAMC,QAA3D,eACA,uBAAGH,UAAW,qCAAgCC,KAAKC,MAAMC,QAAS,yBAC9DgB,IAAKG,IAAQD,IAAK,WADtB,kBAQR,kBAACf,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACpB,yBAAKT,UAAW,mDAA8CC,KAAKC,MAAMC,QACrE,uBAAGH,UAAW,yBAAoBC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKM,IAAWJ,IAAK,cAAhF,cACA,uCACA,uBAAGrB,UAAW,uCAAkCC,KAAKC,MAAMC,QAA3D,iBACA,uBAAGH,UAAW,qCAAgCC,KAAKC,MAAMC,QAAS,yBAC9DgB,IAAKO,IAAUL,IAAK,aADxB,sB,GAhDGJ,a,QCmKpBU,E,uKAjKP,OACI,6BACI,kBAACvB,EAAA,EAAD,CAAWJ,UAAW,sCAAkCC,KAAKC,MAAMC,QAC/D,wBAAIH,UAAW,4BAAwBC,KAAKC,MAAMC,QAAlD,sBACA,kBAACE,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACrB,yBAAKT,UAAW,0BAAsBC,KAAKC,MAAMC,QAC7C,kBAACE,EAAA,EAAD,CAAKL,UAAW,iCAA6BC,KAAKC,MAAMC,QACpD,kBAACG,EAAA,EAAD,CAAKN,UAAW,8BAA0BC,KAAKC,MAAMC,OAASI,GAAI,GAC9D,2CACA,wCAEJ,kBAACD,EAAA,EAAD,CAAKN,UAAW,+BAA2BC,KAAKC,MAAMC,OAASI,GAAI,GAC/D,6BACI,yBAAKY,IAAKC,IAAcC,IAAK,kBAEjC,uBAAGrB,UAAW,gCAA4BC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKO,IAAUL,IAAK,aAAvF,YAMhB,kBAACf,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACrB,yBAAKT,UAAW,0BAAsBC,KAAKC,MAAMC,QAC7C,kBAACE,EAAA,EAAD,CAAKL,UAAW,iCAA6BC,KAAKC,MAAMC,QACpD,kBAACG,EAAA,EAAD,CAAKN,UAAW,8BAA0BC,KAAKC,MAAMC,OAASI,GAAI,GAC9D,sCACA,sCAEJ,kBAACD,EAAA,EAAD,CAAKN,UAAW,+BAA2BC,KAAKC,MAAMC,OAASI,GAAI,GAC/D,6BACI,yBAAKY,IAAKC,IAAcC,IAAK,kBAEjC,uBAAGrB,UAAW,gCAA4BC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKO,IAAUL,IAAK,aAAvF,YAOhB,kBAACf,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACrB,yBAAKT,UAAW,0BAAsBC,KAAKC,MAAMC,QAC7C,kBAACE,EAAA,EAAD,CAAKL,UAAW,iCAA6BC,KAAKC,MAAMC,QACpD,kBAACG,EAAA,EAAD,CAAKN,UAAW,8BAA0BC,KAAKC,MAAMC,OAASI,GAAI,GAC9D,sCACA,sCAEJ,kBAACD,EAAA,EAAD,CAAKN,UAAW,+BAA2BC,KAAKC,MAAMC,OAASI,GAAI,GAC/D,6BACI,yBAAKY,IAAKM,IAAWJ,IAAK,eAE9B,uBAAGrB,UAAW,gCAA4BC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKG,IAAQD,IAAK,WAArF,aAQhB,kBAACf,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACrB,yBAAKT,UAAW,0BAAsBC,KAAKC,MAAMC,QAC7C,kBAACE,EAAA,EAAD,CAAKL,UAAW,iCAA6BC,KAAKC,MAAMC,QACpD,kBAACG,EAAA,EAAD,CAAKN,UAAW,8BAA0BC,KAAKC,MAAMC,OAASI,GAAI,GAC9D,8CACA,yCAEJ,kBAACD,EAAA,EAAD,CAAKN,UAAW,+BAA2BC,KAAKC,MAAMC,OAASI,GAAI,GAC/D,6BACI,yBAAKY,IAAKM,IAAWJ,IAAK,eAE9B,uBAAGrB,UAAW,gCAA4BC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKG,IAAQD,IAAK,iBAArF,cAMpB,kBAAChB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACrB,yBAAKT,UAAW,0BAAsBC,KAAKC,MAAMC,QAC7C,kBAACE,EAAA,EAAD,CAAKL,UAAW,iCAA6BC,KAAKC,MAAMC,QACpD,kBAACG,EAAA,EAAD,CAAKN,UAAW,8BAA0BC,KAAKC,MAAMC,OAASI,GAAI,GAC9D,yCACA,sCAEJ,kBAACD,EAAA,EAAD,CAAKN,UAAW,+BAA2BC,KAAKC,MAAMC,OAASI,GAAI,GAC/D,6BACI,yBAAKY,IAAKI,IAAaF,IAAK,iBAEhC,uBAAGrB,UAAW,gCAA4BC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKG,IAAQD,IAAK,WAArF,aAMhB,kBAACf,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACrB,yBAAKT,UAAW,0BAAsBC,KAAKC,MAAMC,QAC7C,kBAACE,EAAA,EAAD,CAAKL,UAAW,iCAA6BC,KAAKC,MAAMC,QACpD,kBAACG,EAAA,EAAD,CAAKN,UAAW,8BAA0BC,KAAKC,MAAMC,OAASI,GAAI,GAC9D,sCACA,sCAEJ,kBAACD,EAAA,EAAD,CAAKN,UAAW,+BAA2BC,KAAKC,MAAMC,OAASI,GAAI,GAC/D,6BACI,yBAAKY,IAAKI,IAAaF,IAAK,iBAEhC,uBAAGrB,UAAW,gCAA4BC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKG,IAAQD,IAAK,WAArF,aAOhB,kBAACf,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACrB,yBAAKT,UAAW,2BAAuBC,KAAKC,MAAMC,QAC9C,kBAACE,EAAA,EAAD,CAAKL,UAAW,iCAA6BC,KAAKC,MAAMC,QACpD,kBAACG,EAAA,EAAD,CAAKN,UAAW,8BAA0BC,KAAKC,MAAMC,OAASI,GAAI,GAC9D,sCACA,wCAEJ,kBAACD,EAAA,EAAD,CAAKN,UAAW,+BAA2BC,KAAKC,MAAMC,OAASI,GAAI,GAC/D,6BACI,qCAAKY,IAAKK,IAAaH,IAAK,eAA5B,MAAgD,iBAEpD,uBAAGrB,UAAW,gCAA4BC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKO,IAAUL,IAAK,aAAvF,aAQhB,kBAACf,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACrB,yBAAKT,UAAW,0BAAsBC,KAAKC,MAAMC,QAC7C,kBAACE,EAAA,EAAD,CAAKL,UAAW,iCAA6BC,KAAKC,MAAMC,QACpD,kBAACG,EAAA,EAAD,CAAKN,UAAW,8BAA0BC,KAAKC,MAAMC,OAASI,GAAI,GAC9D,4CACA,0CAEJ,kBAACD,EAAA,EAAD,CAAKN,UAAW,+BAA2BC,KAAKC,MAAMC,OAASI,GAAI,GAC/D,6BACI,yBAAKY,IAAKK,IAAaH,IAAK,iBAEhC,uBAAGrB,UAAW,gCAA4BC,KAAKC,MAAMC,QAAS,yBAAKgB,IAAKO,IAAUL,IAAK,aAAvF,cAOxB,yBAAKrB,UAAW,wBAAoBC,KAAKC,MAAMC,QAC3C,2D,GAzJac,aC0ClBW,E,kDA/CX,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IAMVW,eAAiB,WAEY,UAArB,EAAKgB,MAAM1B,MACP,EAAK2B,SAAS,CACV3B,MAAO,SAIX,EAAK2B,SAAS,CACV3B,MAAO,WAdnB,EAAK0B,MAAQ,CAAC1B,MAAO,QAFN,E,qDAyBf,OACI,yBAAKH,UAAW,2BAAsBC,KAAK4B,MAAM1B,QAC7C,kBAAC,EAAD,CACIU,eAAgBZ,KAAKY,eACrBV,MAAOF,KAAK4B,MAAM1B,QAEtB,kBAAC,EAAD,CACIA,MAAOF,KAAK4B,MAAM1B,QAGtB,kBAAC,EAAD,CACIA,MAAOF,KAAK4B,MAAM1B,a,GArCXc,aCOZc,MAPf,WACE,OAEA,kBAAC,EAAD,CAAc/B,UAAW,SCGPgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACQ,kBAAC,EAAD,OAGRC,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ad1d44b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-up.95f916a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-down.69a5c77f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-facebook.a7383764.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-twitter.810ccee8.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-instagram.991487fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-youtube.8499da12.svg\";","import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from 'react-bootstrap/Form'\nimport '../Css/AppContainer.css';\n\nclass HeaderAndDarkModeToggle extends Component {\n    render() {\n        return (\n            <div className={'headerAndDarkModeToggle'  + ` ${this.props.theme}`}>\n                <Container>\n                    <Row>\n                        <Col xs={12} sm={12} md={6}>\n                            <h1> Social Media Dashboard </h1>\n                            <p> Total Followers: 668,566</p>\n\n\n                        </Col>\n                        <Col xs={12} sm={12} md={6}>\n                            <Container className={'darkModeToggleColumn'  + ` ${this.props.theme}`}>\n                                <Row>\n                                    <Col xs={0} sm={0} md={6}>\n\n\n\n                                    </Col>\n                                    <Col className={'darkModeText'  + ` ${this.props.theme}`} xs={6} sm={6} md={3}>\n                                        <p> Light Mode </p>\n\n                                    </Col>\n                                    <Col  className={'darkModeToggle'  + ` ${this.props.theme}`} xs={6} sm={6} md={3}>\n                                        <Form className={'darkModeToggleContainer'}>\n                                            <Form.Check\n                                                onClick={this.props.toggleDarkMode}\n                                                type=\"switch\"\n                                                id=\"custom-switch\"\n                                                label=\"\"\n\n                                            />\n                                        </Form>\n                                    </Col>\n                                </Row>\n                            </Container>\n\n\n                        </Col>\n                    </Row>\n                </Container>\n\n            </div>\n        );\n    }\n}\n\nHeaderAndDarkModeToggle.propTypes = {};\n\nexport default HeaderAndDarkModeToggle;\n","import React, {Component} from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport '../Css/AppContainer.css';\nimport facebookIcon from '../Images/icon-facebook.svg';\nimport twitterIcon from '../Images/icon-twitter.svg';\nimport instaIcon from '../Images/icon-instagram.svg';\nimport youtubeIcon from '../Images/icon-youtube.svg';\nimport upIcon from '../Images/icon-up.svg';\nimport downIcon from '../Images/icon-down.svg';\n\nclass FollowerCountColumns extends Component {\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col xs={12} sm={6} md={3}>\n                            <div className={'followerCounter facebookFollowerColumn ' + ` ${this.props.theme}`}>\n                                <p className={'accountName' + ` ${this.props.theme}`}><img src={facebookIcon} alt={'FacebookIcon'}/> @BBC NEWS\n                                </p>\n                                <h1> 100,987 </h1>\n                                <p className={'followerCounterSubheading' + ` ${this.props.theme}`}> Followers</p>\n                                <p className={'followerUpdate increase' + ` ${this.props.theme}`}><img src={upIcon} alt={'upIcon'}/> 258\n                                    Today</p>\n                            </div>\n\n                        </Col>\n                        <Col xs={12} sm={6} md={3}>\n                            <div className={'followerCounter twitterFollowerColumn' + ` ${this.props.theme}`}>\n                                <p className={'accountName' + ` ${this.props.theme}`}><img src={twitterIcon} alt={'twitterIcon'}/> @BBC NEWS\n                                </p>\n                                <h1> 109,087 </h1>\n                                <p className={'followerCounterSubheading' + ` ${this.props.theme}`}> Followers</p>\n                                <p className={'followerUpdate increase' + ` ${this.props.theme}`}><img src={upIcon} alt={'upIcon'}/> 99\n                                    Today</p>\n                            </div>\n\n\n                        </Col>\n                        <Col xs={12} sm={6} md={3}>\n                            <div className={'followerCounter instagramFollowerColumn' + ` ${this.props.theme}`}>\n                                <p className={'accountName' + ` ${this.props.theme}`}><img src={youtubeIcon} alt={'youtubeIcon'}/> @BBC NEWS\n                                </p>\n                                <h1> 450,253 </h1>\n                                <p className={'followerCounterSubheading' + ` ${this.props.theme}`}> Followers </p>\n                                <p className={'followerUpdate increase' + ` ${this.props.theme}`}><img\n                                    src={upIcon} alt={'upIcon'}/> 1,099 Today</p>\n\n\n                            </div>\n\n\n                        </Col>\n                        <Col xs={12} sm={6} md={3}>\n                            <div className={'followerCounter youtubeFollowerColumn' + ` ${this.props.theme}`}>\n                                <p className={'accountName' + ` ${this.props.theme}`}><img src={instaIcon} alt={'instaIcon'}/> @BBC NEWS</p>\n                                <h1> 8,239 </h1>\n                                <p className={'followerCounterSubheading' + ` ${this.props.theme}`}> Subscribers </p>\n                                <p className={'followerUpdate decrease' + ` ${this.props.theme}`}><img\n                                    src={downIcon} alt={'downIcon'}/> 75 Today</p>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </div>\n        );\n    }\n}\n\nFollowerCountColumns.propTypes = {};\n\nexport default FollowerCountColumns;\n","import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport facebookIcon from \"../Images/icon-facebook.svg\";\nimport upIcon from \"../Images/icon-up.svg\";\nimport twitterIcon from \"../Images/icon-twitter.svg\";\nimport youtubeIcon from \"../Images/icon-youtube.svg\";\nimport instaIcon from \"../Images/icon-instagram.svg\";\nimport downIcon from \"../Images/icon-down.svg\";\nimport '../Css/AppContainer.css'\n\nclass OverviewComponents extends Component {\n    render() {\n        return (\n            <div>\n                <Container className={'overViewContentContainer'  + ` ${this.props.theme}`}>\n                    <h1 className={'overViewHeader'  + ` ${this.props.theme}`}> Overview - Today </h1>\n                    <Row>\n\n                        <Col xs={12} sm={12} md={3}>\n                            <div className={'overViewCell'  + ` ${this.props.theme}`}>\n                                <Row className={'overViewCellContent'  + ` ${this.props.theme}`}>\n                                    <Col className={'overViewCellLeft'  + ` ${this.props.theme}`} xs={6}>\n                                        <p> Page Views </p>\n                                        <h1> 8,700 </h1>\n                                    </Col>\n                                    <Col className={'overViewCellRight'  + ` ${this.props.theme}`} xs={6}>\n                                        <div>\n                                            <img src={facebookIcon} alt={'FacebookIcon'}/>\n                                        </div>\n                                        <p className={'statistic decrease'  + ` ${this.props.theme}`}><img src={downIcon} alt={'downIcon'}/> 3% </p>\n                                    </Col>\n                                </Row>\n                            </div>\n\n                        </Col>\n                        <Col xs={12} sm={12} md={3}>\n                            <div className={'overViewCell'  + ` ${this.props.theme}`}>\n                                <Row className={'overViewCellContent'  + ` ${this.props.theme}`}>\n                                    <Col className={'overViewCellLeft'  + ` ${this.props.theme}`} xs={6}>\n                                        <p> Likes </p>\n                                        <h1> 528 </h1>\n                                    </Col>\n                                    <Col className={'overViewCellRight'  + ` ${this.props.theme}`} xs={6}>\n                                        <div>\n                                            <img src={facebookIcon} alt={'FacebookIcon'}/>\n                                        </div>\n                                        <p className={'statistic decrease'  + ` ${this.props.theme}`}><img src={downIcon} alt={'downIcon'}/> 2% </p>\n                                    </Col>\n                                </Row>\n                            </div>\n\n\n                        </Col>\n                        <Col xs={12} sm={12} md={3}>\n                            <div className={'overViewCell'  + ` ${this.props.theme}`}>\n                                <Row className={'overViewCellContent'  + ` ${this.props.theme}`}>\n                                    <Col className={'overViewCellLeft'  + ` ${this.props.theme}`} xs={6}>\n                                        <p> Likes </p>\n                                        <h1> 542 </h1>\n                                    </Col>\n                                    <Col className={'overViewCellRight'  + ` ${this.props.theme}`} xs={6}>\n                                        <div>\n                                            <img src={instaIcon} alt={'instaIcon'}/>\n                                        </div>\n                                        <p className={'statistic increase'  + ` ${this.props.theme}`}><img src={upIcon} alt={'upIcon'}/> 27% </p>\n                                    </Col>\n                                </Row>\n\n                            </div>\n\n\n                        </Col>\n                        <Col xs={12} sm={12} md={3}>\n                            <div className={'overViewCell'  + ` ${this.props.theme}`}>\n                                <Row className={'overViewCellContent'  + ` ${this.props.theme}`}>\n                                    <Col className={'overViewCellLeft'  + ` ${this.props.theme}`} xs={6}>\n                                        <p> Profile Views </p>\n                                        <h1> 52,000 </h1>\n                                    </Col>\n                                    <Col className={'overViewCellRight'  + ` ${this.props.theme}`} xs={6}>\n                                        <div>\n                                            <img src={instaIcon} alt={'instaIcon'}/>\n                                        </div>\n                                        <p className={'statistic increase'  + ` ${this.props.theme}`}><img src={upIcon} alt={'FacebookIcon'}/> 75% </p>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} sm={12} md={3}>\n                            <div className={'overViewCell'  + ` ${this.props.theme}`}>\n                                <Row className={'overViewCellContent'  + ` ${this.props.theme}`}>\n                                    <Col className={'overViewCellLeft'  + ` ${this.props.theme}`} xs={6}>\n                                        <p> Retweets </p>\n                                        <h1> 117 </h1>\n                                    </Col>\n                                    <Col className={'overViewCellRight'  + ` ${this.props.theme}`} xs={6}>\n                                        <div>\n                                            <img src={twitterIcon} alt={'twitterIcon'}/>\n                                        </div>\n                                        <p className={'statistic increase'  + ` ${this.props.theme}`}><img src={upIcon} alt={'upIcon'}/> 33% </p>\n                                    </Col>\n                                </Row>\n                            </div>\n\n                        </Col>\n                        <Col xs={12} sm={12} md={3}>\n                            <div className={'overViewCell'  + ` ${this.props.theme}`}>\n                                <Row className={'overViewCellContent'  + ` ${this.props.theme}`}>\n                                    <Col className={'overViewCellLeft'  + ` ${this.props.theme}`} xs={6}>\n                                        <p> Likes </p>\n                                        <h1> 507 </h1>\n                                    </Col>\n                                    <Col className={'overViewCellRight'  + ` ${this.props.theme}`} xs={6}>\n                                        <div>\n                                            <img src={twitterIcon} alt={'twitterIcon'}/>\n                                        </div>\n                                        <p className={'statistic increase'  + ` ${this.props.theme}`}><img src={upIcon} alt={'upIcon'}/> 53% </p>\n                                    </Col>\n                                </Row>\n                            </div>\n\n\n                        </Col>\n                        <Col xs={12} sm={12} md={3}>\n                            <div className={'overViewCell '  + ` ${this.props.theme}`}>\n                                <Row className={'overViewCellContent'  + ` ${this.props.theme}`}>\n                                    <Col className={'overViewCellLeft'  + ` ${this.props.theme}`} xs={6}>\n                                        <p> Likes </p>\n                                        <h1> 4,350 </h1>\n                                    </Col>\n                                    <Col className={'overViewCellRight'  + ` ${this.props.theme}`} xs={6}>\n                                        <div>\n                                            <img src={youtubeIcon} alt={'youtubeIcon'} alt={'youtubeIcon'}/>\n                                        </div>\n                                        <p className={'statistic decrease'  + ` ${this.props.theme}`}><img src={downIcon} alt={'downIcon'}/> 19% </p>\n                                    </Col>\n                                </Row>\n\n                            </div>\n\n\n                        </Col>\n                        <Col xs={12} sm={12} md={3}>\n                            <div className={'overViewCell'  + ` ${this.props.theme}`}>\n                                <Row className={'overViewCellContent'  + ` ${this.props.theme}`}>\n                                    <Col className={'overViewCellLeft'  + ` ${this.props.theme}`} xs={6}>\n                                        <p> Total Views </p>\n                                        <h1> 140,700 </h1>\n                                    </Col>\n                                    <Col className={'overViewCellRight'  + ` ${this.props.theme}`} xs={6}>\n                                        <div>\n                                            <img src={youtubeIcon} alt={'youtubeIcon'}/>\n                                        </div>\n                                        <p className={'statistic decrease'  + ` ${this.props.theme}`}><img src={downIcon} alt={'downIcon'}/> 4% </p>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n                <div className={'disclaimer'  + ` ${this.props.theme}`}>\n                    <p> *Test Data being used</p>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nOverviewComponents.propTypes = {};\n\nexport default OverviewComponents;\n","import React, {Component} from 'react';\nimport HeaderAndDarkModeToggle from './HeaderAndDarkModeToggle'\nimport FollowerCountColumns from \"./FollowerCountColumns\";\nimport '../Css/AppContainer.css'\nimport OverviewComponents from \"./OverviewComponents\";\n\nclass AppContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {theme: 'dark'};\n\n    }\n\n\n    toggleDarkMode = () => {\n        {\n            this.state.theme === 'light' ? (\n                this.setState({\n                    theme: 'dark'\n                })\n\n            ) : (\n                this.setState({\n                    theme: 'light'\n                })\n\n            )\n        }\n    }\n\n\n    render() {\n        return (\n            <div className={' appContainer' + ` ${this.state.theme}`}>\n                <HeaderAndDarkModeToggle\n                    toggleDarkMode={this.toggleDarkMode}\n                    theme={this.state.theme}\n                />\n                <FollowerCountColumns\n                    theme={this.state.theme}\n\n                />\n                <OverviewComponents\n                    theme={this.state.theme}\n\n\n                />\n            </div>\n        );\n    }\n}\n\nAppContainer.propTypes = {};\n\nexport default AppContainer;\n","import React from 'react';\nimport './App.css';\n\nimport AppContainer from './Components/AppContainer';\n\n\nfunction App() {\n  return (\n\n  <AppContainer className={'app'}/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n            <App/>\n\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}